# =============================================================================
# Largest product in a series
# Problem 8
# The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.
# Find the thirteen adjacent digits in the 1000-digit number that have the greatest product.
# What is the value of this product?
# =============================================================================

one_k_digit = "73167176531330624919225119674426574742355349194934969835203127745063262395783" \
              "18016984801869478851843858615607891129494954595017379583319528532088055111254" \
              "06987471585238630507156932909632952274430435576689664895044524452316173185640" \
              "30987111217223831136222989342338030813533627661428280644448664523874930358907" \
              "29629049156044077239071381051585930796086670172427121883998797908792274921901" \
              "69972088809377665727333001053367881220235421809751254540594752243525849077116" \
              "70556013604839586446706324415722155397536978179778461740649551492908625693219" \
              "78468622482839722413756570560574902614079729686524145351004748216637048440319" \
              "98900088952434506585412275886668811642717147992444292823086346567481391912316" \
              "28245861786645835912456652947654568284891288314260769004224219022671055626321" \
              "11110937054421750694165896040807198403850962455444362981230987879927244284909" \
              "18884580156166097919133875499200524063689912560717606058861164671094050775410" \
              "0225698315520005593572972571636269561882670428252483600823257530420752963450"

one_k_list = list(one_k_digit)
dlist = list(map(int, one_k_list))

def lpis(list, n):
    update = 0
    for i in range(len(list)-n):
        result = 1
        for j in range(n):
            result *= list[i+j]
        if result > update:
            update = result
    return update

print(lpis(dlist, 13))